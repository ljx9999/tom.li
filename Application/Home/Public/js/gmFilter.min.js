var gmFilter = function (b) {
    this.defaults = {
        city: [{id: 1, param: "city", name: "\u53f0\u5317", value: "Taipei"},
            {id: 2, param: "city", name: "\u6843\u5712", value: "Taoyuan"},
            {id: 3, param: "city", name: "\u65b0\u7af9", value: "Hsinchu"},
            {id: 4, param: "city", name: "\u53f0\u4e2d", value: "Taichung"},
            {id: 5, param: "city", name: "\u53f0\u5357", value: "Tainan"},
            {id: 6, param: "city", name: "\u9ad8\u96c4", value: "Kaohsiung"
        }],
        category: [{id: -1, param: "category_id", name: "居室", value: ""},
            {
            id: -2,
            param: "category_id",
            name: "\u7f8e\u98df",
            value: "1",
            sub_categories: [{id: 1, param: "category_id", name: "\u5168\u90e8", value: "1"}, {
                id: 2,
                param: "tag_id",
                name: "\u4e2d\u5f0f\u6599\u7406",
                value: "2"
            }, {id: 6, param: "tag_id", name: "\u897f\u5f0f\u6599\u7406", value: "6"}, {
                id: 5,
                param: "tag_id",
                name: "\u65e5\u5f0f\u6599\u7406",
                value: "5"
            }, {id: 4, param: "tag_id", name: "\u7f8e\u5f0f\u9910\u5ef3", value: "4"}, {
                id: 9,
                param: "tag_id",
                name: "\u7fa9\u5f0f\u6599\u7406",
                value: "9"
            }, {id: 7, param: "tag_id", name: "\u7570\u570b\u6599\u7406", value: "7"}, {
                id: 15,
                param: "tag_id",
                name: "\u5403\u5230\u98fd",
                value: "15"
            }, {id: 8, param: "tag_id", name: "\u5496\u5561\u8f15\u98df", value: "8"}, {
                id: 10,
                param: "tag_id",
                name: "\u751c\u9ede\u51b0\u54c1",
                value: "10"
            }]
        }, {
            id: -3,
            param: "category_id",
            name: "\u7f8e\u985e",
            value: "4",
            sub_categories: [{id: 4, param: "category_id", name: "\u5168\u90e8", value: "4"}, {
                id: 33,
                param: "tag_id",
                name: "\u7f8e\u5bb9SPA",
                value: "33"
            }, {id: 32, param: "tag_id", name: "\u7f8e\u9aee", value: "32"}, {
                id: 37,
                param: "tag_id",
                name: "\u7f8e\u7532\u7f8e\u776b",
                value: "37,39"
            }]
        }, {id: -4, param: "category_id", name: "\u751f\u6d3b", value: "10"}, {
            id: -5,
            param: "tag_id",
            name: "\u5373\u8cb7\u5373\u7528",
            value: "now"
        }],
        sort: [{id: 1, param: "sort", name: "\u63a8\u85a6", value: ""}, {
            id: 2,
            param: "sort",
            name: "\u6700\u65b0",
            value: "latest"
        }, {id: 3, param: "sort", name: "\u71b1\u9580", value: "popularity"}, {
            id: 4,
            param: "sort",
            name: "\u92b7\u91cf",
            value: "amount"
        }],
        obj: $("#headerfilter-bar"),
        max_height: parseInt(4 * $(window).height() / 5, 10),
        selected: {city: "", cateogry: "", tag: "", sort: ""}
    };
    this.options = $.extend(this.defaults, b);
    this.obj = this.options.obj;
    var a = this;
    a._init();
    a.obj.find("#dropdown-scroller .dropdown-list a").bind("click", function (b) {
        a.active_type && ($(this).parent("li").is(".active") || $(this).trigger("active"), $(this).data("has-sub") ? b.preventDefault() : a.close())
    }).bind("active", function () {
        var b = $(this).data(a.active_type + "-id");
        a.selected[a.active_type] = b;
        a.obj.find("#dropdown-scroller .dropdown-list li.active").removeClass("active");
        $(this).parent("li").addClass("active");
        if ($(this).data("has-sub")) {
            var d = $.grep(a.options[a.active_type], function (a) {
                return a.id === b
            })[0];
            d.sub_categories && (a._renderDropdownSubList(d.sub_categories), a.has_sub = !0)
        } else a._renderDropdownSubList(null), a.has_sub = !1;
        a._resizeDropdownList()
    });
    a.obj.find(".nav li").bind("click", function () {
        var b = a.obj.find(".nav li.active");
        this == b[0] ? a.close() : (b[0] && a._reset(), $(this).trigger("active"))
    }).bind("active", function () {
        var b = $(this).attr("class").replace(/.*(city|category|sort).*/, "$1");
        a.active(b)
    })
};
gmFilter.prototype = {
    options: {},
    active_type: "",
    has_sub: !1,
    selected: {city: "", category: "", sort: ""},
    obj: null,
    scroller: null,
    subscroller: null,
    max_height: 0,
    list_width: 150,
    param: {city: "", category_id: "", tag_id: "", sort: ""},
    _init: function () {
        var b = this;
        b.param.city = b.options.selected.city || $.query.get("city").toString() || "Taipei";
        var a = $.grep(b.options.city, function (a) {
            return a.value === b.param.city
        });
        a[0] && (b.selected.city = a[0].id, b.obj.find(".nav li.city span").text(a[0].name));
        b.param.tag_id = b.options.selected.tag || $.query.get("tag_id").toString() || "";
        var c = "", a = $.grep(b.options.category, function (a) {
            if (a.sub_categories)for (var e in a.sub_categories)if ("tag_id" == a.sub_categories[e].param && a.sub_categories[e].value == b.param.tag_id)return c = a.sub_categories[e].name, !0;
            return "tag_id" == a.param && a.value === b.param.tag_id
        });
        b.param.category_id = b.options.selected.category || $.query.get("category_id").toString() || "";
        a = a[0] ? a : $.grep(b.options.category, function (a) {
            if (a.sub_categories)for (var c in a.sub_categories)if ("category_id" == a.sub_categories[c].param && a.sub_categories[c].value == b.param.category_id)return !0;
            return "category_id" == a.param && a.value === b.param.category_id
        });
        a[0] && (b.selected.category = a[0].id, b.obj.find(".nav li.category span").text(c ? c : a[0].name));
        b.param.sort = b.options.selected.sort || $.query.get("sort").toString() || "";
        a = $.grep(b.options.sort, function (a) {
            return a.value === b.param.sort
        });
        a[0] && (b.selected.sort = a[0].id, b.obj.find(".nav li.sort span").text(a[0].name));
        b._renderDropdownList()
    },
    _renderDropdownList: function () {
        var b = this;
        ["city", "category", "sort"].forEach(function (a) {
            if (b.options[a])for (var c in b.options[a]) {
                var d = b.options[a][c], e = -5 == d.id ? '<span class="font-R">' + d.name + "</span>" : d.name, f = b._buildLink(d);
                d.sub_categories && d.sub_categories.length ? b.obj.find("." + a + "-wrapper .dropdown-list").append('<li class="listfont"><a href="' + f + '" data-' + a + '-id="' + d.id + '" data-has-sub="true">' + e + '<span class="more">more</span></a></li>') : b.obj.find("." + a + "-wrapper .dropdown-list").append('<li class="listfont"><a href="' + f + '" data-' + a + '-id="' + d.id + '">' + e + "</a></li>")
            }
        })
    },
    _renderDropdownSubList: function (b) {
        var a = this, c = "";
        b && b.forEach(function (b) {
            var e = a._buildLink(b);
            c += '<li class="listfont"><a href="' + e + '">' + b.name + "</a></li>"
        });
        a.obj.find("#dropdown-sub-scroller .dropdown-list").html(c).find("a").bind("click", function () {
            a.close()
        })
    },
    _buildLink: function (b) {
        var a = this, c = location.pathname + "@v=idx";
        ["city", "category_id", "tag_id", "sort"].forEach(function (d) {
            "category_id" == b.param && "tag_id" == d || "tag_id" == b.param && "category_id" == d || (b.param == d ? b.value && (c += "&" + d + "=" + b.value) : a.param[d] && (c += "&" + d + "=" + a.param[d]))
        });
        return c
    },
    _resizeDropdownList: function () {
        var b = this;
        if (b.active_type) {
            var a = -1 < navigator.userAgent.search("MSIE"), c = b.obj.find(".menubox > ." + b.active_type + "-wrapper").height(), c = c > b.options.max_height && !a ? b.options.max_height : c, d = b.has_sub ? b.list_width : $(window).width();
            b.obj.find(".dropdown-module, #dropdown-scroller, #dropdown-sub-scroller").height(c);
            b.obj.find("#dropdown-scroller").width(d);
            setTimeout(function () {
                if (b.has_sub) {
                    var d = b.obj.find("#dropdown-sub-scroller .dropdown-list").height();
                    d > c && d && (c = d)
                }
                c = c > b.options.max_height && !a ? b.options.max_height : c;
                b.obj.find(".dropdown-module, #dropdown-scroller, #dropdown-sub-scroller").height(c);
                this.scroller && this.scroller.destroy();
                this.scroller = new iScroll("dropdown-scroller", {hScroll: !1, vScrollbar: !1});
                this.subscroller && this.subscroller.destroy();
                this.subscroller = new iScroll("dropdown-sub-scroller", {hScroll: !1, vScrollbar: !1})
            }, 150)
        } else setTimeout(function () {
            b.obj.find(".dropdown-module, #dropdown-scroller, #dropdown-sub-scroller").height(0)
        }, 150)
    },
    _reset: function () {
        this.active_type = "";
        this.has_sub = !1;
        this.obj.find(".nav li.active").removeClass("active").find("a").removeClass("active");
        this.obj.find(".menubox > li.active").removeClass("active");
        this.obj.find(".shade").remove()
    },
    active: function (b) {
        var a = this;
        a._reset();
        a.active_type = b;
        a.obj.find(".nav li." + b).addClass("active").find("a").addClass("active");
        a.obj.find("." + b + "-wrapper").addClass("active");
        a.obj.find(".dropdown-wrapper").append('<div class="shade" style="height: ' + $(document).height() + 'px;"></div>');
        a.obj.find(".shade").bind("click", function () {
            a.close()
        });
        window.scrollTo(0, a.obj.offset().top);
        a.selected[b] ? a.obj.find("." + b + "-wrapper a[data-" + b + "-id=" + a.selected[b] + "]").trigger("active") : a._resizeDropdownList()
    },
    close: function () {
        this._reset();
        this._resizeDropdownList()
    }
};